import {HttpClient} from '@angular/common/http';
import {Component, OnInit} from '@angular/core';
import {Malware, MalwareDTOWeb} from '../computer-dto';
import {FormBuilder, FormGroup} from '@angular/forms';
import Axios from "axios";
import {interval, Subscription} from "rxjs";
import {URL_SERVER} from "../constants";


@Component({
  selector: 'app-malware',
  templateUrl: './malware.component.html',
  styleUrls: ['./malware.component.css']
})
export class MalwareComponent implements OnInit {

  malwareForm!: FormGroup;
  malwares: MalwareDTOWeb[] = [];
  subscription: Subscription | undefined;


  constructor(private http: HttpClient, private readonly fb: FormBuilder) { }

  ngOnInit(): void {
    this.malwareForm = this.initForm();
    this.obtenerMalwares();
    this.subscription = interval(1000).subscribe(x => { this.obtenerMalwares(); });
  }

  initForm(): FormGroup {
    return this.fb.group({
      name: '',
      description: ''
    });
  }

  obtenerMalwares(): void {
    this.http.get<MalwareDTOWeb[]>(URL_SERVER + '/malware-web').subscribe(
      malwares => this.malwares = malwares,
      error => console.error(error)
    );
  }

  eliminarMalware(name: string): void {
    Axios.delete(URL_SERVER + `/malware/${name}`)
      .then(() => this.obtenerMalwares())
      .catch((reason: any) => console.error(reason));
  }


  crearMalware(): void {
    const nuevoMalware: Malware = {
      name: this.malwareForm.get('name')?.value,
      description: this.malwareForm.get('description')?.value
    };
    if (nuevoMalware.name.length > 0 && nuevoMalware.description.length > 0)
    {
      Axios.post(URL_SERVER + '/malware', nuevoMalware)
        .then(
          () => {
              this.obtenerMalwares()
              this.malwareForm.reset();
          }
        )
        .catch((reason: any) => console.error(reason));
    }
  }
}
