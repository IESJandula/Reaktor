package es.reaktor.reaktor.controller;

import es.reaktor.models.DTO.MalwareDTOWeb;
import es.reaktor.models.Malware;
import es.reaktor.reaktor.reaktor_actions.ReaktorActions;
import es.reaktor.reaktor.repository.MalwareRepository;
import es.reaktor.reaktor.services.ReaktorService;
import lombok.AllArgsConstructor;
import lombok.extern.slf4j.Slf4j;
import org.apache.catalina.util.ErrorPageSupport;
import org.springframework.http.ResponseEntity;
import org.springframework.transaction.annotation.Transactional;
import org.springframework.web.bind.annotation.*;

import java.util.List;

@CrossOrigin(origins = "*")
@Slf4j
@AllArgsConstructor
@RestController
public class MalwareController
{

    /**
     * Attribute malwareRepository
     */
    private MalwareRepository malwareRepository;

    /**
     * Attribute reaktorService
     */
    private ReaktorService reaktorService;

    /**
     * Attribute reaktorActions
     */
    private ReaktorActions reaktorActions;

    /**
     * This Method is used to obtain the malware list
     * @return the malware list
     */
    @GetMapping(value = "/malware")
    public List<Malware> getMalware()
    {
        return this.malwareRepository.findAll();
    }

    /**
     * This Method is used to obtain the malware list for Web
     * @return the malware list for Web
     */
    @GetMapping(value = "/malware-web")
    public List<MalwareDTOWeb> getMalwareWeb()
    {
        return this.reaktorService.getMalwareWeb();
    }

    /**
     * This Method is used to create a malware
     * @return Ok if the malware is created
     */
    @PostMapping(value = "/malware")
    public ResponseEntity<?> createMalware(
            @RequestBody Malware newMalware
    )
    {
        log.info("Creating malware {}", newMalware);
        return ResponseEntity.ok().body(this.malwareRepository.save(newMalware));
    }


    /**
     * This Method is used to create a malware
     * @param name malware name
     * @return Ok if the malware is created
     */
    @DeleteMapping(value = "/malware/{name}")
    public ResponseEntity<?> deleteMalware(
            @PathVariable String name
    )
    {
        this.reaktorService.deleteMalware(name);
        return ResponseEntity.ok("Malware has been deleted");
    }

    /**
     * This Method is used to report a malware for a motherboard
     * @return Ok if the malware is reported
     */
    @PostMapping(value = "/report-malware")
    public void reportMalware(
            @RequestHeader String motherBoardSerialNumber,
            @RequestBody List<Malware> malwareList
    )
    {
        log.info("Reporting malware for motherboard {}", motherBoardSerialNumber);
        this.reaktorActions.insertMalwareMotherboard(motherBoardSerialNumber, malwareList);
    }



}
